package com.vrocketz.spotchu.views.adapter;

import java.net.URI;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.imageaware.ImageAware;
import com.nostra13.universalimageloader.core.imageaware.ImageViewAware;
import com.vrocketz.spotchu.R;
import com.vrocketz.spotchu.helper.Config;

import android.content.Context;
import android.net.Uri;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;

public class MySpotsListAdapter extends BaseAdapter{
	
	private JSONArray spots;
	private LayoutInflater mLayoutInflater;
	private Context context;
	
	public MySpotsListAdapter(Context c){
		context = c;
		mLayoutInflater = LayoutInflater.from(c);
		spots = new JSONArray();
	}
	
	public MySpotsListAdapter(Context c, JSONArray spots){
		this.spots = spots;
		context = c;
		mLayoutInflater = LayoutInflater.from(c);
	}
	
	public void setSpots(JSONArray spots){
		this.spots = spots;
	}

	@Override
	public int getCount() {
		return spots.length();
	}

	@Override
	public Object getItem(int position) {
		try {
			return spots.get(position);
		} catch (JSONException e) {
			if (Config.DEBUG)
				e.printStackTrace();
			return null;
		}
	}

	@Override
	public long getItemId(int position) {
		return position + 1;
	}

	@Override
	public View getView(int pos, View convertView, ViewGroup parent) {
		View view;
		ViewHolder holder;
		if (convertView == null){
			view = mLayoutInflater.inflate(R.layout.my_spots_list_item, parent, false);
			holder = new ViewHolder();
			holder.img = (ImageView)view.findViewById(R.id.imgSpot);
			holder.title = (TextView)view.findViewById(R.id.lblSpotTitle);
			holder.time = (TextView)view.findViewById(R.id.lblSpotTime);
			view.setTag(holder);
		}else {
			view = convertView;
			holder = (ViewHolder)view.getTag();
		}
		
		try {
			JSONObject spot = (JSONObject) spots.get(pos);
		    ImageAware imageAware = new ImageViewAware(holder.img, false);
		    ImageLoader.getInstance().displayImage(spot.getString("img"), imageAware);
			holder.title.setText(spot.getString("desc"));
			holder.time.setText(spot.getString("created_at"));
		} catch (JSONException e) {
			e.printStackTrace();
		}
		
		return view;
	}
	
	private class ViewHolder {
		public ImageView img;
		public TextView title, time;
		public ImageButton retry;
	}


}
