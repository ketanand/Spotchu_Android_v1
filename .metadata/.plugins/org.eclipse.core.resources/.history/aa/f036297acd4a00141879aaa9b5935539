package com.vrocketz.spotchu.views.adapter;


import java.util.ArrayList;
import java.util.Random;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.util.SparseArray;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.TextView;

import com.etsy.android.grid.util.DynamicHeightImageView;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.imageaware.ImageAware;
import com.nostra13.universalimageloader.core.imageaware.ImageViewAware;
import com.vrocketz.spotchu.R;
import com.vrocketz.spotchu.activity.FullScreenSpotActivity;

public class ExploreGridViewAdapter extends ArrayAdapter<String>{
	
	private Activity activity;
	private ArrayList<String> mThumbIds;
	private final LayoutInflater mLayoutInflater;
	private final Random mRandom;
	private static final SparseArray<Double> sPositionHeightRatios = new SparseArray<Double>();

    public ExploreGridViewAdapter (Context context, int textViewResourceId,
            ArrayList<String> objects) {
    	super(context, textViewResourceId, objects);
        this.activity = (Activity) context;
        mThumbIds = objects;
        this.mLayoutInflater = LayoutInflater.from(context);
        this.mRandom = new Random();
    }
    
    @Override
    public String getItem(int position) {
    	String item = super.getItem(position);
    	//Log.d(Constants.APP_NAME, "[ExploreGridAdapter] pos :" + position + ", uri: " + item);
    	return item;
    }

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		View v = convertView;
		DynamicHeightImageView picture;
        TextView name;

        if(v == null)
        {
           v = mLayoutInflater.inflate(R.layout.explore_grid_item, parent, false);
           v.setTag(R.id.gridImage, v.findViewById(R.id.gridImage));
           v.setTag(R.id.gridImageText, v.findViewById(R.id.gridImageText));
           //v.setTag(R.id.gridImageCorner, v.findViewById(R.id.gridImageCorner));
        }

        picture = (DynamicHeightImageView)v.getTag(R.id.gridImage);
        name = (TextView)v.getTag(R.id.gridImageText);


        name.setText("spotchu");
        double positionHeight = getPositionRatio(position);
        
        picture.setHeightRatio(positionHeight);
        ImageAware imageAware = new ImageViewAware(picture, false);
        ImageLoader.getInstance().displayImage(getItem(position), imageAware);
        return v;
	}
	
	class OnImageClickListener implements OnClickListener {
		 
        int postion;
 
        // constructor
        public OnImageClickListener(int position) {
            this.postion = position;
        }
 
        @Override
        public void onClick(View v) {
            // on selecting grid view image
            // launch full screen activity
            Intent i = new Intent(activity, FullScreenSpotActivity.class);
            i.putExtra("position", postion);
            activity.startActivity(i);
        }
 
    }
	
	 private double getPositionRatio(final int position) {
	        double ratio = sPositionHeightRatios.get(position, 0.0);
	        // if not yet done generate and stash the columns height
	        // in our real world scenario this will be determined by
	        // some match based on the known height and width of the image
	        // and maybe a helpful way to get the column height!
	        if (ratio == 0) {
	            ratio = getRandomHeightRatio();
	            sPositionHeightRatios.append(position, ratio);
	        }
	        return ratio;
	    }
	 
	    private double getRandomHeightRatio() {
	        return (mRandom.nextDouble() / 2.0) + 1.0; // height will be 1.0 - 1.5
	                                                    // the width
	    }
	
}
